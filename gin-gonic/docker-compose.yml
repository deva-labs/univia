services:
  db:
    image: univia:mysql
    container_name: univia-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASS}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
    ports:
      - "3308:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - univia_network

  app:
    image: univia:dev
    container_name: univia
    restart: always
    ports:
      - "${APP_PORT}:2000"
    environment:
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
    volumes:
      - ./:/app
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - univia_network

  redis:
    image: redis:8.0.2-alpine
    container_name: univia-redis
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5
    ports:
      - "6372:6379"
    volumes:
      - redis_data:/data
    networks:
      - univia_network

  minio:
    image: quay.io/minio/minio
    container_name: univia-minio
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data/minio --console-address ":9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    volumes:
      - minio_data:/data/minio
    networks:
      - univia_network
volumes:
  db_data:
    driver: local
  redis_data:
    name: ${APP_NAME}-redis-data
  minio_data:
    name: ${APP_NAME}-minio-data

networks:
  univia_network:
    driver: bridge

x-bake:
  app:
    dockerfile: Dockerfile
    tags:
      - ${APP_NAME}-${FRAMEWORK}:${APP_VERSION}
    platforms: ["linux/amd64"]
    cache-from: type=registry,ref=${APP_NAME}-${FRAMEWORK}:cache
    cache-to: type=registry,ref=${APP_NAME}-${FRAMEWORK}:cache,mode=max